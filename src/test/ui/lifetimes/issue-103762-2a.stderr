error[E0106]: missing lifetime specifier
  --> $DIR/issue-103762-2a.rs:9:34
   |
LL | fn a1(_: Box<dyn Trait + '_>) -> &str { loop {} }
   |                                  ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL | fn a1(_: Box<dyn Trait + '_>) -> &'static str { loop {} }
   |                                   +++++++

error[E0106]: missing lifetime specifier
  --> $DIR/issue-103762-2a.rs:10:30
   |
LL | fn a2(_: Box<Trait + '_>) -> &str { loop {} }
   |                              ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL | fn a2(_: Box<Trait + '_>) -> &'static str { loop {} }
   |                               +++++++

error[E0637]: `'_` cannot be used here
  --> $DIR/issue-103762-2a.rs:14:18
   |
LL | fn b1<T: Trait + '_>(_: &T) -> &str { loop {} }
   |                  ^^ `'_` is a reserved lifetime name

error[E0637]: `'_` cannot be used here
  --> $DIR/issue-103762-2a.rs:15:42
   |
LL | fn b2<T>(_: &T) -> &str where T: Trait + '_ { loop {} }
   |                                          ^^ `'_` is a reserved lifetime name

error[E0106]: missing lifetime specifier
  --> $DIR/issue-103762-2a.rs:24:8
   |
LL |     -> &str { loop {} }
   |        ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime
   |
LL |     -> &'static str { loop {} }
   |         +++++++

error[E0658]: anonymous lifetimes in `impl Trait` are unstable
  --> $DIR/issue-103762-2a.rs:23:23
   |
LL | fn c1(_: impl Trait + '_)
   |                       ^^ expected named lifetime parameter
   |
   = help: add `#![feature(anonymous_lifetime_in_impl_trait)]` to the crate attributes to enable
help: consider introducing a named lifetime parameter
   |
LL | fn c1<'a>(_: impl Trait + '_'a )
   |      ++++                   ++

error[E0658]: anonymous lifetimes in `impl Trait` are unstable
  --> $DIR/issue-103762-2a.rs:32:25
   |
LL | fn c2(_: &(impl Trait + '_))
   |                         ^^ expected named lifetime parameter
   |
   = help: add `#![feature(anonymous_lifetime_in_impl_trait)]` to the crate attributes to enable
help: consider introducing a named lifetime parameter
   |
LL | fn c2<'a>(_: &(impl Trait + '_'a ))
   |      ++++                     ++

error[E0658]: anonymous lifetimes in `impl Trait` are unstable
  --> $DIR/issue-103762-2a.rs:34:32
   |
LL | fn c3(_: &i32, _: impl Trait + '_)
   |                                ^^ expected named lifetime parameter
   |
   = help: add `#![feature(anonymous_lifetime_in_impl_trait)]` to the crate attributes to enable
help: consider introducing a named lifetime parameter
   |
LL | fn c3<'a>(_: &i32, _: impl Trait + '_'a )
   |      ++++                            ++

error[E0658]: anonymous lifetimes in `impl Trait` are unstable
  --> $DIR/issue-103762-2a.rs:36:23
   |
LL | fn c4(_: impl Trait + '_, _: &i32)
   |                       ^^ expected named lifetime parameter
   |
   = help: add `#![feature(anonymous_lifetime_in_impl_trait)]` to the crate attributes to enable
help: consider introducing a named lifetime parameter
   |
LL | fn c4<'a>(_: impl Trait + '_'a , _: &i32)
   |      ++++                   ++

error: aborting due to 9 previous errors

Some errors have detailed explanations: E0106, E0637, E0658.
For more information about an error, try `rustc --explain E0106`.
